version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: myapp-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: clients
      POSTGRES_PASSWORD: clientspass
      POSTGRES_DB: clientsdb
    volumes:
      - myapp_postgres_data:/var/lib/postgresql/data
    networks:
      - myapp-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: myapp-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - myapp_rabbitmq_data:/var/lib/rabbitmq
    networks:
      - myapp-network

  mailhog:
    image: mailhog/mailhog
    container_name: myapp-mailhog
    restart: always
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - myapp-network

  myapp:
    build: .                        # Usa o Dockerfile presente na raiz do projeto
    container_name: myapp-app
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/clientsdb
      SPRING_DATASOURCE_USERNAME: clients
      SPRING_DATASOURCE_PASSWORD: clientspass

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

      SPRING_MAIL_HOST: mailhog
      SPRING_MAIL_PORT: 1025
    depends_on:
      - postgres
      - rabbitmq
      - mailhog
    networks:
      - myapp-network

volumes:
  myapp_postgres_data:
  myapp_rabbitmq_data:

networks:
  myapp-network:
    driver: bridge
